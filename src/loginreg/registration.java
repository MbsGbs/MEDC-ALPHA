/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package loginreg;
import config.dbconnector;
import config.passwordHasher;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.security.NoSuchAlgorithmException;
import java.util.HashSet;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class registration extends javax.swing.JFrame {
  private static HashSet<String> registeredEmails = new HashSet<>();
    private static HashSet<String> registeredUsernames = new HashSet<>();
    
 public registration() {
  initComponents();
 }

 /**
  * This method is called from within the constructor to initialize the form.
  * WARNING: Do NOT modify this code. The content of this method is always
  * regenerated by the Form Editor.
  */
 @SuppressWarnings("unchecked")
 // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
 private void initComponents() {

  jCheckBox1 = new javax.swing.JCheckBox();
  right = new javax.swing.JPanel();
  Left = new javax.swing.JPanel();
  jLabel1 = new javax.swing.JLabel();
  fname = new javax.swing.JLabel();
  Lname = new javax.swing.JLabel();
  Sign = new javax.swing.JButton();
  a = new javax.swing.JLabel();
  Password = new javax.swing.JLabel();
  User = new javax.swing.JLabel();
  un = new javax.swing.JTextField();
  Cancel = new javax.swing.JButton();
  User1 = new javax.swing.JLabel();
  e = new javax.swing.JTextField();
  num = new javax.swing.JTextField();
  fn = new javax.swing.JTextField();
  ln = new javax.swing.JTextField();
  ut = new javax.swing.JComboBox<>();
  pass = new javax.swing.JPasswordField();

  jCheckBox1.setText("jCheckBox1");

  setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

  right.setBackground(new java.awt.Color(88, 72, 72));

  Left.setBackground(new java.awt.Color(236, 45, 45));

  javax.swing.GroupLayout LeftLayout = new javax.swing.GroupLayout(Left);
  Left.setLayout(LeftLayout);
  LeftLayout.setHorizontalGroup(
   LeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
   .addGap(0, 243, Short.MAX_VALUE)
  );
  LeftLayout.setVerticalGroup(
   LeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
   .addGap(0, 0, Short.MAX_VALUE)
  );

  jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
  jLabel1.setForeground(new java.awt.Color(204, 204, 204));
  jLabel1.setText("Registration");

  fname.setBackground(new java.awt.Color(204, 204, 204));
  fname.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
  fname.setForeground(new java.awt.Color(204, 204, 204));
  fname.setText("First Name");

  Lname.setBackground(new java.awt.Color(204, 204, 204));
  Lname.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
  Lname.setForeground(new java.awt.Color(204, 204, 204));
  Lname.setText("Last Name");

  Sign.setBackground(new java.awt.Color(236, 45, 45));
  Sign.setText("Sign-in");
  Sign.addMouseListener(new java.awt.event.MouseAdapter() {
   public void mouseClicked(java.awt.event.MouseEvent evt) {
    SignMouseClicked(evt);
   }
  });
  Sign.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
    SignActionPerformed(evt);
   }
  });

  a.setBackground(new java.awt.Color(204, 204, 204));
  a.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
  a.setForeground(new java.awt.Color(204, 204, 204));
  a.setText("Email");

  Password.setBackground(new java.awt.Color(204, 204, 204));
  Password.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
  Password.setForeground(new java.awt.Color(204, 204, 204));
  Password.setText("password");

  User.setBackground(new java.awt.Color(204, 204, 204));
  User.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
  User.setForeground(new java.awt.Color(204, 204, 204));
  User.setText("Username");

  un.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
    unActionPerformed(evt);
   }
  });

  Cancel.setBackground(new java.awt.Color(236, 45, 45));
  Cancel.setText("Cancel");
  Cancel.addMouseListener(new java.awt.event.MouseAdapter() {
   public void mouseClicked(java.awt.event.MouseEvent evt) {
    CancelMouseClicked(evt);
   }
  });
  Cancel.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
    CancelActionPerformed(evt);
   }
  });

  User1.setBackground(new java.awt.Color(204, 204, 204));
  User1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
  User1.setForeground(new java.awt.Color(204, 204, 204));
  User1.setText("Contact number");

  e.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
    eActionPerformed(evt);
   }
  });

  num.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
    numActionPerformed(evt);
   }
  });

  fn.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
    fnActionPerformed(evt);
   }
  });

  ln.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
    lnActionPerformed(evt);
   }
  });

  ut.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "user", "admin" }));
  ut.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
    utActionPerformed(evt);
   }
  });

  javax.swing.GroupLayout rightLayout = new javax.swing.GroupLayout(right);
  right.setLayout(rightLayout);
  rightLayout.setHorizontalGroup(
   rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
   .addGroup(rightLayout.createSequentialGroup()
    .addComponent(Left, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
    .addGroup(rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
     .addGroup(rightLayout.createSequentialGroup()
      .addGap(50, 50, 50)
      .addGroup(rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
       .addGroup(rightLayout.createSequentialGroup()
        .addGroup(rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
         .addComponent(User)
         .addComponent(Password))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
         .addGroup(rightLayout.createSequentialGroup()
          .addComponent(Cancel)
          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(Sign))
         .addComponent(un, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
         .addComponent(pass)))
       .addGroup(rightLayout.createSequentialGroup()
        .addGroup(rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
         .addComponent(fname)
         .addComponent(Lname))
        .addGap(10, 10, 10)
        .addGroup(rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(fn, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
         .addComponent(ln, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
         .addComponent(ut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
       .addGroup(rightLayout.createSequentialGroup()
        .addComponent(User1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(num, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
       .addGroup(rightLayout.createSequentialGroup()
        .addComponent(a)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(e, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))))
     .addGroup(rightLayout.createSequentialGroup()
      .addGap(145, 145, 145)
      .addComponent(jLabel1)))
    .addContainerGap(58, Short.MAX_VALUE))
  );
  rightLayout.setVerticalGroup(
   rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
   .addComponent(Left, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
   .addGroup(rightLayout.createSequentialGroup()
    .addGap(36, 36, 36)
    .addComponent(jLabel1)
    .addGap(23, 23, 23)
    .addComponent(ut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
    .addGroup(rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
     .addComponent(fname)
     .addComponent(fn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
    .addGroup(rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
     .addComponent(Lname)
     .addComponent(ln, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
    .addGroup(rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
     .addComponent(a)
     .addComponent(e, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    .addGap(11, 11, 11)
    .addGroup(rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
     .addComponent(User1)
     .addComponent(num, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    .addGap(8, 8, 8)
    .addGroup(rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
     .addComponent(User)
     .addComponent(un, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
    .addGroup(rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
     .addComponent(Password)
     .addComponent(pass))
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 23, Short.MAX_VALUE)
    .addGroup(rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
     .addComponent(Sign, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
     .addComponent(Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
    .addGap(70, 70, 70))
  );

  javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
  getContentPane().setLayout(layout);
  layout.setHorizontalGroup(
   layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
   .addGap(0, 674, Short.MAX_VALUE)
   .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(layout.createSequentialGroup()
     .addGap(0, 0, Short.MAX_VALUE)
     .addComponent(right, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
     .addGap(0, 0, Short.MAX_VALUE)))
  );
  layout.setVerticalGroup(
   layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
   .addGap(0, 418, Short.MAX_VALUE)
   .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(layout.createSequentialGroup()
     .addGap(0, 4, Short.MAX_VALUE)
     .addComponent(right, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
     .addGap(0, 3, Short.MAX_VALUE)))
  );

  pack();
  setLocationRelativeTo(null);
 }// </editor-fold>//GEN-END:initComponents
private boolean isValidEmail(String email) {
   
 
    // Regular expression to match a basic email pattern
    String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";
    Pattern pattern = Pattern.compile(emailRegex);
    Matcher matcher = pattern.matcher(email);
    return matcher.matches();
}

 private void SignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignActionPerformed

 }//GEN-LAST:event_SignActionPerformed

 private void SignMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignMouseClicked
                              
    String firstName = fn.getText().trim();
    String lastName = ln.getText().trim();
    String userEmail = e.getText().trim();
    String contactNumber = num.getText().trim();
    String userName = un.getText().trim();
    String userPassword = pass.getText().trim();

    // Validate First Name, Last Name, Username, and Password
    if (firstName.isEmpty() || lastName.isEmpty() || userEmail.isEmpty() || contactNumber.isEmpty() || userName.isEmpty() || userPassword.isEmpty()) {
        JOptionPane.showMessageDialog(this, "All fields are required.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;  // Stop execution here if validation fails
    }

    // Validate Email format using regex
    if (!isValidEmail(userEmail)) {
        JOptionPane.showMessageDialog(this, "Please enter a valid email address.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;  // Stop execution here if validation fails
    }

    // Validate Password length (at least 8 characters)
    if (userPassword.length() < 8) {
        JOptionPane.showMessageDialog(this, "Password must be at least 8 characters long.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;  // Stop execution here if validation fails
    }

    // Validate Contact Number (must be exactly 11 digits and contain only numbers)
    if (!contactNumber.matches("\\d{11}")) {
        JOptionPane.showMessageDialog(this, "Contact number must be exactly 11 digits and contain only numbers.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;  // Stop execution here if validation fails
    }

    // Check for duplicate email or username in the database
    dbconnector dbc = new dbconnector();
    if (dbc.isDuplicate(userEmail, userName)) {
        JOptionPane.showMessageDialog(this, "This email or username is already registered.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;  // Stop execution here if validation fails
    }

    // Hash the password before storing it in the database
    String hashedPassword;
    try {
        hashedPassword = passwordHasher.hashPassword(userPassword);
    } catch (NoSuchAlgorithmException ex) {
        JOptionPane.showMessageDialog(this, "Error hashing password.", "Error", JOptionPane.ERROR_MESSAGE);
        return;  // Stop execution if hashing fails
    }

    // If all validations pass, proceed with database insertion
    String sql = "INSERT INTO table_user (u_fname, u_lname, u_email, u_contact, u_username, u_password, u_type, u_status) "
               + "VALUES (?, ?, ?, ?, ?, ?, ?, ?)";

    boolean isInserted = dbc.insertData(sql, 
        firstName, 
        lastName, 
        userEmail, 
        contactNumber, 
        userName, 
        hashedPassword,  // Use the hashed password here
        ut.getSelectedItem().toString(), 
        "Pending"
    );

    if (isInserted) {
        JOptionPane.showMessageDialog(null, "Registration Successful!");
        GUI gui = new GUI(); // Open the main application window
        gui.setVisible(true);
        this.dispose(); // Close the registration window
    } else {
        JOptionPane.showMessageDialog(null, "Connection Error. Please try again.");
    }
 }//GEN-LAST:event_SignMouseClicked

 private void CancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelMouseClicked
  new GUI().setVisible(true);
        this.dispose(); 
 }//GEN-LAST:event_CancelMouseClicked

 private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
  // TODO add your handling code here:
 }//GEN-LAST:event_CancelActionPerformed

 private void unActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unActionPerformed
  // TODO add your handling code here:
 }//GEN-LAST:event_unActionPerformed

 private void eActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eActionPerformed
  // TODO add your handling code here:
 }//GEN-LAST:event_eActionPerformed

 private void numActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numActionPerformed
  // TODO add your handling code here:
 }//GEN-LAST:event_numActionPerformed

 private void fnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fnActionPerformed
  // TODO add your handling code here:
 }//GEN-LAST:event_fnActionPerformed

 private void lnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lnActionPerformed
  // TODO add your handling code here:
 }//GEN-LAST:event_lnActionPerformed

 private void utActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_utActionPerformed
  // TODO add your handling code here:
 }//GEN-LAST:event_utActionPerformed

 /**
  * @param args the command line arguments
  */
 public static void main(String args[]) {
  /* Set the Nimbus look and feel */
  //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
  /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
   */
  try {
   for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
    if ("Nimbus".equals(info.getName())) {
     javax.swing.UIManager.setLookAndFeel(info.getClassName());
     break;
    }
   }
  } catch (ClassNotFoundException ex) {
   java.util.logging.Logger.getLogger(registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
  } catch (InstantiationException ex) {
   java.util.logging.Logger.getLogger(registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
  } catch (IllegalAccessException ex) {
   java.util.logging.Logger.getLogger(registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
  } catch (javax.swing.UnsupportedLookAndFeelException ex) {
   java.util.logging.Logger.getLogger(registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
  }
  //</editor-fold>

  /* Create and display the form */
  java.awt.EventQueue.invokeLater(new Runnable() {
   public void run() {
    new registration().setVisible(true);
   }
  });
 }

 // Variables declaration - do not modify//GEN-BEGIN:variables
 private javax.swing.JButton Cancel;
 private javax.swing.JPanel Left;
 private javax.swing.JLabel Lname;
 private javax.swing.JLabel Password;
 private javax.swing.JButton Sign;
 private javax.swing.JLabel User;
 private javax.swing.JLabel User1;
 private javax.swing.JLabel a;
 private javax.swing.JTextField e;
 private javax.swing.JTextField fn;
 private javax.swing.JLabel fname;
 private javax.swing.JCheckBox jCheckBox1;
 private javax.swing.JLabel jLabel1;
 private javax.swing.JTextField ln;
 private javax.swing.JTextField num;
 private javax.swing.JPasswordField pass;
 private javax.swing.JPanel right;
 private javax.swing.JTextField un;
 private javax.swing.JComboBox<String> ut;
 // End of variables declaration//GEN-END:variables

    private void SignMouseClicked(ActionEvent evt) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
